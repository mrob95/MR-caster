[os]
"pronunciation"   = "OS"

[re]
"pronunciation"   = "(regular expressions | regex)"
"search"          = ["re.search(r\"\", )", "left:4"]
"match"           = ["re.match(r\"\", )", "left:4"]
"findall"         = ["re.findall(r\"\", )", "left:4"]
"compile"         = ["re.compile(r\"\")", "left:2"]

[sys]
"pronunciation"   = "(system | sis)"
"path append"     = ["sys.path.append()", "left"]

[numpy]
"pronunciation"     = "numb pie"
"import_as"         = "np"
"array"             = ["np.array()", "left"]
"arrange"           = ["np.arrange()", "left"]
"zeros"             = ["np.zeros()", "left"]
"matrix"            = ["np.matrix()", "left"]
"gen from text"     = ["np.genfromtext(, delimiter=\"\")", "left:15"]
#
"as type"           = ["astype()", "left"]
"(dee | data) type" = ["dtype"]

[pandas]
"pronunciation"   = "pandas"
"import_as"       = "pd"
"con cat"         = ["pd.concat()", "left"]
"data frame"      = ["pd.DataFrame()", "left"]
"melt"            = ["pd.melt()", "left"]
"merge"           = ["pd.merge()", "left"]
"read CSV"        = ["pd.read_csv()", "left"]
"read excel"      = ["pd.read_excel()", "left"]
"series"          = ["pd.Series()", "left"]
"to date time"    = ["pd.to_datetime()", "left"]
"to numeric"      = ["pd.to_numeric()", "left"]
#
"all"             = ["all()", ""]
"columns"         = ["columns", ""]
"D types"         = ["dtypes", ""]
"describe"        = ["describe()", ""]
"drop duplicates" = ["drop_duplicates()", ""]
"drop NA"         = ["dropna()", ""]
"head"            = ["head()", ""]
"index"           = ["index", ""]
"info"            = ["info()", ""]
"reset index"     = ["reset_index()", ""]
"not null"        = ["notnull()", ""]
"shape"           = ["shape", ""]
"tail"            = ["tail()", ""]
"value counts"    = ["value_counts()", ""]
#
"apply"           = ["apply()", "left"]
"assign"          = ["assign()", "left"]
"as type"         = ["astype()", "left"]
"count"           = ["count()", "left"]
"drop"            = ["drop()", "left"]
"fill NA"         = ["fillna()", "left"]
"filter"          = ["filter()", "left"]
"group by"        = ["groupby()", "left"]
"I lock"          = ["iloc[]", "left"]
"lock"            = ["loc[]", "left"]
"max"             = ["max()", "left"]
"mean"            = ["mean()", "left"]
"median"          = ["median()", "left"]
"min"             = ["min()", "left"]
"en largest"       = ["nlargest()", "left"]
"en smallest"      = ["nsmallest()", "left"]
"pivot"           = ["pivot()", "left"]
"pivot table"     = ["pivot_table()", "left"]
"Q cut"           = ["qcut()", "left"]
"quantile"        = ["quantile()", "left"]
"query"           = ["query()", "left"]
"rename"          = ["rename()", "left"]
"resample"        = ["resample()", "left"]
"sample"          = ["sample()", "left"]
"set index"       = ["set_index()", "left"]
"sort values"     = ["sort_values()", "left"]
"standard"        = ["std()", "left"]
"sum"             = ["sum()", "left"]
"to CSV"          = ["to_csv()", "left"]
"to excel"        = ["to_excel()", "left"]

[matplotlib]
"name"            = "matplotlib.pyplot"
"pronunciation"   = "[mat] plot [lib]"
"import_as"       = "plt"
"show"            = ["plt.show()", "left"]
"title"           = ["plt.title()", "left"]
"ex label"        = ["plt.xlabel()", "left"]
"ex limit"        = ["plt.xlim()", "left"]
"why label"       = ["plt.ylabel()", "left"]
"why limit"       = ["plt.ylim()", "left"]
#
"plot"            = ["plot()", "left"]

