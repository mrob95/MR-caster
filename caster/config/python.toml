pronunciation = "Python"
title_contexts = [".py"]
function_prefix = "fun"
template_prefix = "template"
method_prefix = "meth"

[functions]
"(int | integer)"       = "int"
"(iter | hitter) items" = "iteritems"
"append"                = "append"
"capitalise"            = "capitalize"
"clear"                 = "clear"
"character"             = "chr"
"copy"                  = "copy"
"count"                 = "count"
"enumerate"             = "enumerate"
"extend"                = "extend"
"find all"              = "find_all"
"find"                  = "find"
"float"                 = "float"
"get"                   = "get"
"has attribute" = "hasattr"
"join"                  = "join"
"index"                 = "index"
"insert"                = "insert"
"items"                 = "items"
"keys"                  = "keys"
"length"                = "len"
"list"                  = "list"
"min"                   = "min"
"max"                   = "max"
"pop" = "pop"

[commands]
"assign"              = " = "
"breaker"             = "break"
"class"               = ["class :", "left"]
"dunder init"         = ["__init__()", "left"]
"for each"            = ["for  in :", "left:5"]
"for loop"            = ["for i in range():", "left:2"]
"from import"         = ["from  import ", "home, right:5"]
"iffae"               = ["if :", "left"]
"iffae not"           = ["if not :", "left"]
"import"              = "import "
"insert long comment" = ["''''''", "left:3, enter:2, up"]
"lambda"              = ["lambda :", "left"]
"lodge and"           = " and "
"lodge in"            = " in "
"lodge is"            = " is "
"lodge not"           = " not "
"lodge or"            = " or "
"lodge for"           = " for "
"return"              = "return "
"shell iffae"         = ["elif :", "left"]
"shells"              = "else:"
"value false"         = "False"
"value none"          = "None"
"value true"          = "True"
"while loop"         = ["while :", "left"]
"with open"          = ["with open() as f:", "left:7"]

[unary_methods]
"(int | integer)"          = "int"
"(len | length)"           = "len"
"(negation | negative)"    = "neg"
"(reper | representation)" = "repr"
"absolute"                 = "abs"
"dir"                      = "dir"
"enter"                    = "enter"
"exit"                     = "exit"
"invert"                   = "invert"
"(iter | iterator)"        = "iter"
"name"                     = "name"
"new"                      = "new"
"(non zero | boolean)"     = "nonzero"
"positive"                 = "pos"
"size of"                  = "sizeof"
"string"                   = "str"
"unicode"                  = "unicode"

[binary_methods]
"add"                      = "add"
"subtract"                 = "sub"
"multiply"                 = "mul"
"divide"                   = "div"
"equal"                    = "eq"
"less than"                = "lt"
"greater than"             = "gt"
"less equal"               = "le"
"greater equal"            = "ge"
"modulo"                   = "mod"
"power"                    = "pow"
"and"                      = "and"
"or"                       = "or"
"ex or"                    = "xor"

[misc_methods]
"get item"    = ["getitem", "self, key"]
"set item"    = ["setitem", "self, key, value"]
"delete item" = ["delitem", "self, key"]
"contains"    = ["contains", "self, item"]
"missing"     = ["missing", "self, key"]


[exceptions]
"arithmetic"         = "ArithmeticError"
"assertion"          = "AssertionError"
"environment"        = "EnvironmentError"
"EOF"                = "EOFError"
"exception"          = "Exception"
"floating-point"     = "FloatingPointError"
"import"             = "ImportError"
"index"              = "IndexError"
"IO"                 = "IOError"
"key"                = "KeyError"
"keyboard interrupt" = "KeyboardInterrupt"
"lookup"             = "LookupError"
"name"               = "NameError"
"not implemented"    = "NotImplementedError"
"OS"                 = "OSError"
"overflow"           = "OverflowError"
"runtime"            = "RuntimeError"
"standard"           = "StandardError"
"stop iteration"     = "StopIteration"
"syntax"             = "SyntaxError"
"system exit"        = "SystemExit"
"type"               = "TypeError"
"unbound local"      = "UnboundLocalError"
"value"              = "ValueError"
"zero division"      = "ZeroDivisionError"

[templates]
