"pronunciation" = "Git Bash"
"executable_contexts" = ["\\sh.exe", "\\bash.exe", "\\cmd.exe", "\\mintty.exe"]

[general_commands]
"copy"                   = ["", "c-insert"]
"paste"                  = ["", "s-insert"]
"cancel" = ["", "c-c"]
"CD up"                  = ["cd ..", "enter"]
"CD"                     = "cd "
"list"                   = ["ls", "enter"]
"make directory"         = "mkdir "
"to file"                = " > "
"dot pie"                = ".py"
"dot tex"                = ".tex"
"dot PDF"                = ".pdf"

[latex_commands]
"PDF LaTeX"              = "pdflatex "
"bib TeX"                = "bibtex "
"pan doc"                = ["pandoc  -o ", "left:4"]
"pan doc beamer"         = ["pandoc  -t beamer -o ", "left:14"]

[python_commands]
"python 3"               = ["python3 .py", "left:3"]
"python 2"               = ["python27 .py", "left:3"]
"python 2 pip [install]" = "python27 -m pip install "
"pip two (install | build) package" = "pip2 install -e ."

[r_commands]
"R script"               = ["Rscript .r", "left:2"]
"R markdown"             = ["Rscript -e \"rmarkdown::render('.Rmd', clean=TRUE)\"", "left:19"]

[jekyll_commands]
"jekyll serve watch"     = "jekyll serve --watch"
"jekyll build"           = "jekyll build"
"jekyll"                 = "jekyll"

[image_commands]
"image [magic] trim"     = ["convert  -fuzz 1% -trim +repage ", "left:24"]

[git_commands]
"generate change log" = ["github_changelog_generator /", "left"]
"generate mathfly change log" = ["github_changelog_generator mrob95/mathfly", "left"]
"(undo changes | git reset hard)"              = "git reset --hard"
"git (abort cherry pick | cherry pick abort)"  = "git cherry-pick --abort"
"git (branch delete | delete branch)" = "git branch -D "
"git (checkout branch | new branch)"  = "git checkout -b "
"git (GUI | gooey)"                   = "git gui"
"git add all"                         = "git add -A"
"git add"                             = "git add "
"git base"                            = "git "
"git blame"                           = "git blame PATH -L FIRSTLINE,LASTLINE"
"git branch set upstream [to]"        = "git branch --set-upstream-to="
"git branch"                          = "git branch "
"git checkout develop"                = ["git checkout develop", "enter"]
"git checkout master"                 = ["git checkout master", "enter"]
"git checkout upstream develop"       = ["git checkout upstream/develop", "enter"]
"git checkout"                        = "git checkout "
"git cherry pick"                     = "git cherry-pick "
"git clone github"                    = ["git clone https://github.com/.git", "left:4"]
"git clone"                           = "git clone "
"git commit all"                      = ["git commit -a -m \"\"", "left"]
"git commit"                          = ["git commit -m \"\"", "left"]
"git diff"                            = "git diff"
"git discard"                         = "git checkout -- "
"git fetch upstream"                  = "git fetch upstream"
"git fetch"                           = "git fetch "
"git gooey blame"                     = "git gui blame PATH"
"git hub"                             = "https://github.com/"
"git init"                            = "git init"
"git log"                             = "git log"
"git merge tool"                      = "git mergetool"
"git merge"                           = "git merge "
"git publish"                         = "git push -u origin "
"git pull"                            = "git pull "
"git push set upstream [origin]"      = "git push --set-upstream origin "
"git push"                            = "git push "
"git remote add origin"               = "git remote add origin "
"git remote"                          = "git remote "
"git remove branch"                   = "git branch -d "
"git reset"                           = "git reset"
"git stash branch"                    = "git stash branch NAME"
"git stash list"                      = "git stash list"
"git stash"                           = "git stash"
"git status"                          = ["git status", "enter"]
"git visualize all"                   = "gitk --all"
"git visualize file"                  = "gitk -- PATH"
"preview remove untracked | git clean preview" = "git clean -nd"
"remove untracked | git clean untracked"       = "git clean -fd"
"search recursive count"                       = "grep -rinH \"PATTERN\" * | wc -l"
"search recursive filetype"                    = "find . -name \"*.java\" -exec grep -rinH \"PATTERN\" {} \\;"
"search recursive"                             = "grep -rinH \"PATTERN\" *"
"stop tracking [file] | git remove"            = "git rm --cached "
"undo [last] commit | git reset soft head"     = "git reset --soft HEAD~1"