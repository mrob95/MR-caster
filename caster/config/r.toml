pronunciation     = "R"
"title_contexts"  = [".r", "RStudio", "Rterm"]
function_prefix   = "fun"
"graph_prefix"    = "graph"
"model_prefix"    = "model"
"argument_prefix" = "meant"
"template_prefix" = "template"
"markdown_prefix" = "markdown"
library_prefix    = "library"

[commands]
"assign"                 = " <- "
"add comment"            = "# "
"pipe"                   = " %>% "
"data pipe"              = " %$% "
"chain"                  = ["", "end", " %>%", "enter"]
"data chain"             = ["", "end", " %$%", "enter"]
"tell add"               = ["", "end, space, plus, enter"]
"iffae"                  = ["if ()", "left"]
"shells"                 = "else "
"breaker"                = "break"
"for each"               = ["for ( in )", "left:6"]
"for loop"               = ["for (i in 1:)", "left"]
"graph remove legend"    = ["theme(legend.position = \"none\")"]
"while loop"             = ["while ()", "left"]
"lodge and"              = " & "
"lodge in"               = " %in% "
"lodge or"               = " | "
"function"               = ["function()", "left"]
"value null"             = "NULL"
"value NA"               = "NA"
"value true"             = "TRUE"
"value false"            = "FALSE"

[r_functions]
"anti join"              = "anti_join"
"arrange"                = "arrange"
"as character"           = "as.character"
"as date"                = "as.Date"
"as data frame"          = "as.data.frame"
"as tibble"              = "as_tibble"
"as double"              = "as.double"
"as factor"              = "as.factor"
"as numeric"             = "as.numeric"
"bind rows"              = "bind_rows"
"cable"                  = "kable"
"case when"              = "case_when"
"count"                  = "count"
"covariance"             = "cov"
"correlation"            = "cor"
"distinct"               = "distinct"
"describe"               = "describe"
"drop NA"                = "drop_na"
"eigen"                  = "eigen"
"everything"             = "everything"
"filter"                 = "filter"
"full join"              = "full_join"
"gather"                 = ["gather", "key = \"\", value = \"\", ", "15"]
"get working directory"  = "getwd"
"set working directory"  = "setwd"
"glimpse"                = "glimpse"
"group by"               = "group_by"
"head"                   = "head"
"if else"                = "ifelse"
"inner join"             = "inner_join"
"install packages"       = "install.packages"
"is NA"                  = "is.na"
"(isn't | is not) NA"    = "!is.na"
"left join"              = "left_join"
"length"                 = "length"
"library"                = "library"
"list"                   = "list"
"list files"             = ["list.files", "path=\".\", pattern=NULL", "0"]
"(LM | linear model)"    = "lm"
"log"                    = "log"
"M table"                = "mtable"
"make directory"         = "dir.create"
"map"                    = "map"
"margins"                = "margins"
"max"                    = "max"
"min"                    = "min"
"mean"                   = "mean"
"mutate"                 = "mutate"
"names"                  = "names"
"nest"                   = "nest"
"paste"                  = "paste0"
"print"                  = "print"
"read CSV"               = "read_csv"
"read E views"           = "readEViews"
"read excel"             = "read_xlsx"
"read RDS"               = "read_rds"
"read standard in [put]" = ["scan", "file=\"stdin\", quiet=TRUE", "0"]
"rename"                 = "rename"
"rename all"             = "rename_all"
"reorder"                = "reorder"
"right join"             = "right_join"
"semi join"              = "semi_join"
"select"                 = "select"
"scale"                  = "scale"
"starts with"            = "starts_with"
"string contains"        = "str_contains"
"string detect"          = "str_detect"
"string replace"         = "str_replace"
"string replace all"     = "str_replace_all"
"subset"                 = "subset"
"sum"                    = "sum"
"summarise"              = "summarise"
"summary"                = "summary"
"tail"                   = "tail"
"tidy"                   = "tidy"
"tibble"                 = "tibble"
"trim white space"       = "trimws"
"type [of]"              = "typeof"
"ungroup"                = "ungroup"
"vector"                 = "c"
"view"                   = "View"
"vee table"              = "vtable"
"write RDS"              = "write_rds"
"write CSV"              = "write_csv"
"ex table"               = "xtable"
"un nest"                = "unnest"

[libraries]
"cable"       = "kable"
"car"         = "car"
"gap minder"  = "gapminder"
"gee animate" = "gganimate"
"gee map"     = "ggmap"
"gee repel"   = "ggrepel"
"grid extra"  = "gridExtra"
"knitter"     = "knitr"
"LM test"     = "lmtest"
"margins"     = "margins"
"psych"       = "psych"
"stargazer"   = "stargazer"
"tidy verse"  = "tidyverse"
"vee table"   = "vtable"
"viridis"     = "viridis"

[r_graph]
"(coordinates | coord) fixed"  = "coord_fixed"
"[geom] column"                = "geom_col"
"[geom] density"               = "geom_density"
"[geom] histogram"             = "geom_histogram"
"[geom] label"                 = "geom_label"
"[geom] line"                  = "geom_line"
"[geom] path"                  = "geom_path"
"[geom] point"                 = "geom_point"
"[geom] polygon"               = "geom_polygon"
"[geom] smooth"                = "geom_smooth"
"[geom] text"                  = "geom_text"
"[GG] plot"                    = ["ggplot", "aes()", "1"]
"aesthetics"                   = "aes"
"element blank"                = "element_blank"
"error bar"                    = "errorbar"
"facet grid"                   = "facet_grid"
"facet wrap"                   = "facet_wrap"
"labels"                       = ["labs", "x = \"\",\ny = \"\",\ntitle = \"\",\nsubtitle = \"\",\ncaption = \"\"", "0"]
"save"                         = "ggsave"
"scale colour continuous"      = "scale_color_continuous"
"scale colour discrete"        = "scale_color_discrete"
"scale ex continuous"          = "scale_x_continuous"
"scale ex discrete"            = "scale_x_discrete"
"scale why continuous"         = "scale_y_continuous"
"scale why discrete"           = "scale_y_discrete"
"theme minimal"                = "theme_minimal"
"theme"                        = "theme"
"viridis"                      = ["scale_color_viridis", "discrete=TRUE", "0"]

[r_args]
"by"                                  = "by = "
"colour"                              = "colour = "
"dodge"                               = "\"dodge\""
"fill"                                = "fill = "
"header"                              = "header = "
"gather"                              = "key = \"\",\nvalue = \"\",\n"
"labels"                              = "x = \"\",\ny = \"\",\ntitle = \"\",\nsubtitle = \"\",\ncaption = \"\""
"LM"                                  = "\"lm\""
"method"                              = "method = "
"position"                            = "position = "
"year"                                = "year"

[r_model]
"arma"                                = "arima(,\norder = c(, 0, ),\ninclude.mean = TRUE)"
"ACF"                                 = "Acf()"
"PACF"                                = "Pacf()"
"chi square"                          = "qchisq"
"coefficients"                        = "coefficients"
"fixed effects"                       = "plm(,\ndata=,\nindex=c(,),\nmodel = \"within\")"
"fitted [values]"                     = "fitted.values"
"instrumental [variable]"             = "ivreg( ~  | ,\ndata = )"
"libraries"                           = "library(AER)\nlibrary(car)\nlibrary(stats)\nlibrary(DescTools)\nlibrary(plm)"
"(linear | LM)"                       =  "lm(, data=)"
"[(linear | test)] hypothesis [test]" =  "linearHypothesis(model = ,\nc(\" = 0\"),\ntest=c(\"F\", \"Chisq\"))"
"(log it)"                            = "glm(,\nfamily = binomial(link=\"logit\"),\ndata=)"
"log likelihood"                      = "logLik()"
"normal"                              = "pnorm(q = , mean = , sd = )"
"pro bit"                             = "glm(,\nfamily = binomial(link=\"probit\"),\ndata=)"
"(pseudo | McFadden) R squared"       = "PseudoR2(, which=\"McFadden\")"
"random effects"                      = "plm(,\ndata=,\nindex=c(,),\nmodel = \"random\")"
"residuals"                           = "residuals"

[markdown]
"graph"                               = ["", "backtick:3", "{r echo=FALSE}", "enter:2, backtick:3, up"]

[cheatsheets]
"([data] wrangling | D plyer)"  = "data-transformation"
"(data import | reader)"        = "data-import"
"(date time | lubri date)"      = "lubridate"
"(factors | for cats)"          = "factors"
"(package | dev tools)"         = "package-development"
"(purr | map)"                  = "purrr"
"(regex | regular expressions)" = "regex"
"(string | stringer)"           = "strings"
"[gee] plot"                    = "data-visualization-2.1"
"[R] markdown reference"        = "rmarkdown-reference"
"[R] markdown"                  = "rmarkdown-2.0"
"base R"                        = "base-r"
"advanced R"                    = "advancedR"
"cartography"                   = "cartography"
"data table"                    = "datatable"
"keras"                         = "keras"
"R studio"                      = "rstudio-ide"
"randomiser"                    = "randomizr"
"shiny"                         = "shiny"
"spark"                         = "sparklyr"
"tidy evaluation"               = "tidyeval"
"viridis"                       = "viridis"

[templates]
"stargazer models" = '''
stargazer(,
    type = "latex",
    out = ".tex",
    font.size = scriptsize,
    single.row = TRUE,
    dep.var.labels.include = FALSE,
    intercept.bottom = FALSE,
    intercept.top = TRUE,
    model.numbers = FALSE,
    omit.stat = c("rsq", "ser"),
    header = FALSE,
    float = FALSE,
    column.labels = c(),
    covariate.labels = c()
    )
'''
# ------------------------------------------------
"stargazer summary" = '''
  as.data.frame() %>%
  stargazer(out = ".tex",
    type = "latex",
    header = FALSE,
    float = FALSE,
    summary = TRUE,
    omit.summary.stat = c("p25", "p75"),
    font.size = "scriptsize",
    covariate.labels = c()
    )
'''
# ------------------------------------------------